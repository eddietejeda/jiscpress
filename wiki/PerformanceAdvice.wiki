#summary Documents caching and other performance tips

A useful overview of how wordpress.com handles performance related issues, is given [http://maisonbisson.com/blog/post/13938/systems-wrangling-session-at-wordcamp-developer-day/ here].

A useful [http://serverqa.wordpress.com/2009/05/31/ask-your-questions-here/ Q&A] was given by the lead SysAdmin for wordpress.com.

== Caching == 

Both memory-based and file-based caching methods are supported by WordPress. 

For a single server arrangement, the file-based [http://wordpress.org/extend/plugins/wp-super-cache/ wp-super-cache] is generally preferred. This plugin is written by the main developer of WordPress Multi-User and the most popular method of caching WordPress. wp-super-cache has also been [http://ocaoimh.ie/89495533/wordpress-nginx-wp-super-cache/ documented] to work with Nginx. Local PHP caches, such as APC and eAccelerator are also commonly used in combination with wp-super-cache. 

For multiple server setups, the memory-based [http://wordpress.org/extend/plugins/batcache/ Batcache] is often recommended. This is used on wordpress.com with memcache. Unlike wp-super-cache, Batcache can be used as a shared cache across multiple servers, rather than a per-server cache. Batcache rides on top of the memcached object cache.


== Databases == 

Use MySQL. It is very popular and well supported. The use of other database software will mean fewer people able to help with support problems. wordpress.com uses MySQL and it scales well. 

For multiple database setups, use [http://wordpress.org/extend/plugins/hyperdb/ HyperDB]. It is developed and used by Automattic for wordpress.com and allows for considerable scaling. 

== Web server == 

Apache is the most well supported web server for use with WordPress. (WordPress is predominantly, though not exclusively, a LAMP application). It is sufficient for moderate-sized installations, but is not considered to run as quickly as Nginx. wordpress.com runs Nginx for serving pages and Apache for serving media. 


== digress.it ==

digress.it, the plugin which JISCPress uses to format documents and provide paragraph-level commenting has been seen to be very fast when used in combination with wp-super-cache and a modern browser, such as Chrome, FF3.5+ or Safari. Navigation between document sections involves little delay and requires no more CPU than is ordinarily required from a WordPress site.

On IE6 & 7, there is a noticeable delay when navigating pages, probably because of the heavy use of Javascript by digress.it. More recent Javascript engines in web browsers are significantly faster. IE 8 is sufficiently fast, but does not compare well to other modern browers.

The Javascript used in digress.it is compressed and significantly faster as a result of this. A typical cached page on a single server setup running JISCPress, will load in x seconds.

Example page caching results on a single, basic EC2 server, using LAMP:

Home Page: http://test.jiscpress.org

<!-- Dynamic page generated in 0.312 seconds. --> 
<!-- Cached page generated by WP-Super-Cache on 2009-12-01 16:16:44 --> 
<!-- Compression = gzip -->

Typical document section page (with 36 comments): http://test.jiscpress.org/2009/07/28/5-priority-investment-areas/

<!-- Dynamic page generated in 1.341 seconds. --> 
<!-- Cached page generated by WP-Super-Cache on 2009-12-01 16:18:39 --> 
<!-- Compression = gzip -->

Once the page is cached, the user should experience faster page loads, depending on the performance of the server, network and their choice of browser.